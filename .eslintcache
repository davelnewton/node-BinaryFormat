{"/Users/dave/work/davelnewton/src/node-BinaryFormat/src/jparser.js":{"size":4817,"mtime":1537387834111,"results":{"filePath":"/Users/dave/work/davelnewton/src/node-BinaryFormat/src/jparser.js","messages":[{"ruleId":"prefer-rest-params","severity":2,"message":"Use the rest parameters instead of 'arguments'.","line":17,"column":20,"nodeType":"Identifier","endLine":17,"endColumn":29},{"ruleId":"no-restricted-syntax","severity":2,"message":"for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.","line":18,"column":5,"nodeType":"ForInStatement","endLine":22,"endColumn":6},{"ruleId":"new-cap","severity":2,"message":"A constructor name should not start with a lowercase letter.","line":35,"column":19,"nodeType":"NewExpression"},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":41,"column":5,"nodeType":"MemberExpression","endLine":41,"endColumn":19},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":70,"column":3,"nodeType":"Property","endLine":70,"endColumn":55,"fix":{"range":[1483,1535],"text":"uint8 () { return this.view.getUint8() }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'uint8'.","line":70,"column":12,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":70,"endColumn":55},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":71,"column":3,"nodeType":"Property","endLine":71,"endColumn":56,"fix":{"range":[1539,1592],"text":"uint16 () { return this.view.getUint16() }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'uint16'.","line":71,"column":12,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":71,"endColumn":56},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":72,"column":3,"nodeType":"Property","endLine":72,"endColumn":56,"fix":{"range":[1596,1649],"text":"uint32 () { return this.view.getUint32() }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'uint32'.","line":72,"column":12,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":72,"endColumn":56},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":73,"column":3,"nodeType":"Property","endLine":73,"endColumn":54,"fix":{"range":[1653,1704],"text":"int8 () { return this.view.getInt8() }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'int8'.","line":73,"column":12,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":73,"endColumn":54},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":74,"column":3,"nodeType":"Property","endLine":74,"endColumn":55,"fix":{"range":[1708,1760],"text":"int16 () { return this.view.getInt16() }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'int16'.","line":74,"column":12,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":74,"endColumn":55},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":75,"column":3,"nodeType":"Property","endLine":75,"endColumn":55,"fix":{"range":[1764,1816],"text":"int32 () { return this.view.getInt32() }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'int32'.","line":75,"column":12,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":75,"endColumn":55},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":76,"column":3,"nodeType":"Property","endLine":76,"endColumn":57,"fix":{"range":[1820,1874],"text":"float32 () { return this.view.getFloat32() }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'float32'.","line":76,"column":12,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":76,"endColumn":57},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":77,"column":3,"nodeType":"Property","endLine":77,"endColumn":57,"fix":{"range":[1878,1932],"text":"float64 () { return this.view.getFloat64() }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'float64'.","line":77,"column":12,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":77,"endColumn":57},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":78,"column":3,"nodeType":"Property","endLine":78,"endColumn":54,"fix":{"range":[1936,1987],"text":"char () { return this.view.getChar() }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'char'.","line":78,"column":12,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":78,"endColumn":54},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":80,"column":3,"nodeType":"Property","endLine":82,"endColumn":4,"fix":{"range":[1992,2080],"text":"string (length) {\n    return this.view.getString(toInt.call(this, length))\n  }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'string'.","line":80,"column":11,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":82,"endColumn":4},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":84,"column":3,"nodeType":"Property","endLine":93,"endColumn":4,"fix":{"range":[2085,2283],"text":"array (type, length) {\n    length = toInt.call(this, length)\n    let results = []\n\n    for (let i = 0; i < length; ++i) {\n      results.push(this.parse(type))\n    }\n\n    return results\n  }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'array'.","line":84,"column":10,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":93,"endColumn":4},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to function parameter 'length'.","line":85,"column":5,"nodeType":"Identifier","endLine":85,"endColumn":11},{"ruleId":"prefer-const","severity":2,"message":"'results' is never reassigned. Use 'const' instead.","line":86,"column":9,"nodeType":"Identifier","endLine":86,"endColumn":16,"fix":{"range":[2160,2163],"text":"const"}},{"ruleId":"object-shorthand","severity":2,"message":"Expected method shorthand.","line":95,"column":3,"nodeType":"Property","endLine":99,"endColumn":4,"fix":{"range":[2288,2478],"text":"if (predicate) {\n    if (predicate instanceof Function ? predicate.call(this) : predicate) {\n      return this.parse.apply(this, Array.prototype.slice.call(arguments, 1))\n    }\n  }"}},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed method 'if'.","line":95,"column":7,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":99,"endColumn":4},{"ruleId":"consistent-return","severity":2,"message":"Expected to return a value at the end of method 'if'.","line":95,"column":7,"nodeType":"FunctionExpression","messageId":"missingReturn"},{"ruleId":"prefer-spread","severity":2,"message":"Use the spread operator instead of '.apply()'.","line":97,"column":14,"nodeType":"CallExpression","endLine":97,"endColumn":78},{"ruleId":"prefer-rest-params","severity":2,"message":"Use the rest parameters instead of 'arguments'.","line":97,"column":64,"nodeType":"Identifier","endLine":97,"endColumn":73},{"ruleId":"func-names","severity":1,"message":"Unexpected unnamed function.","line":102,"column":27,"nodeType":"FunctionExpression","messageId":"unnamed","endLine":175,"endColumn":2},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":107,"column":9,"nodeType":"MemberExpression","endLine":107,"endColumn":23},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '>>'.","line":108,"column":25,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":108,"endColumn":44},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":108,"column":25,"nodeType":"MemberExpression","endLine":108,"endColumn":39},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '&='.","line":111,"column":7,"nodeType":"AssignmentExpression","messageId":"unexpected","endLine":111,"endColumn":26},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":111,"column":7,"nodeType":"MemberExpression","endLine":111,"endColumn":21},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":114,"column":9,"nodeType":"MemberExpression","endLine":114,"endColumn":23},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":114,"column":46,"nodeType":"MemberExpression","endLine":114,"endColumn":60},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '&'.","line":115,"column":20,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":115,"endColumn":72},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '\\x7e'.","line":115,"column":43,"nodeType":"UnaryExpression","messageId":"unexpected","endLine":115,"endColumn":72},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '<<'.","line":115,"column":45,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":115,"endColumn":71},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":115,"column":56,"nodeType":"MemberExpression","endLine":115,"endColumn":70},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":116,"column":22,"nodeType":"MemberExpression","endLine":116,"endColumn":36},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":117,"column":7,"nodeType":"MemberExpression","endLine":117,"endColumn":21},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '|'.","line":121,"column":20,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":121,"endColumn":60},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '<<'.","line":121,"column":44,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":121,"endColumn":59},{"ruleId":"max-len","severity":2,"message":"Line 126 exceeds the maximum line length of 100.","line":126,"column":1,"nodeType":"Program"},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '|'.","line":126,"column":20,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":126,"endColumn":126},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '&'.","line":126,"column":21,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":126,"endColumn":99},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '>>>'.","line":126,"column":22,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":126,"endColumn":79},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":126,"column":53,"nodeType":"MemberExpression","endLine":126,"endColumn":67},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '\\x7e'.","line":126,"column":83,"nodeType":"UnaryExpression","messageId":"unexpected","endLine":126,"endColumn":99},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '<<'.","line":126,"column":85,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":126,"endColumn":98},{"ruleId":"no-bitwise","severity":2,"message":"Unexpected use of '<<'.","line":126,"column":104,"nodeType":"BinaryExpression","messageId":"unexpected","endLine":126,"endColumn":125},{"ruleId":"no-underscore-dangle","severity":2,"message":"Unexpected dangling '_' in '_bitShift'.","line":127,"column":7,"nodeType":"MemberExpression","endLine":127,"endColumn":21},{"ruleId":"prefer-rest-params","severity":2,"message":"Use the rest parameters instead of 'arguments'.","line":135,"column":61,"nodeType":"Identifier","endLine":135,"endColumn":70},{"ruleId":"no-param-reassign","severity":2,"message":"Assignment to function parameter 'structure'.","line":140,"column":5,"nodeType":"Identifier","endLine":140,"endColumn":14},{"ruleId":"prefer-rest-params","severity":2,"message":"Use the rest parameters instead of 'arguments'.","line":140,"column":44,"nodeType":"Identifier","endLine":140,"endColumn":53},{"ruleId":"prefer-spread","severity":2,"message":"Use the spread operator instead of '.apply()'.","line":151,"column":12,"nodeType":"CallExpression","endLine":151,"endColumn":84},{"ruleId":"prefer-destructuring","severity":2,"message":"Use object destructuring.","line":157,"column":11,"nodeType":"VariableDeclarator","endLine":157,"endColumn":33},{"ruleId":"no-restricted-syntax","severity":2,"message":"for..in loops iterate over the entire prototype chain, which is virtually never what you want. Use Object.{keys,values,entries}, and iterate over the resulting array.","line":161,"column":5,"nodeType":"ForInStatement","endLine":167,"endColumn":6},{"ruleId":"guard-for-in","severity":2,"message":"The body of a for-in should be wrapped in an if statement to filter unwanted properties from the prototype.","line":161,"column":5,"nodeType":"ForInStatement","endLine":167,"endColumn":6},{"ruleId":"no-restricted-globals","severity":2,"message":"Unexpected use of 'self'.","line":178,"column":12,"nodeType":"Identifier","endLine":178,"endColumn":16},{"ruleId":"no-undef","severity":2,"message":"'self' is not defined.","line":179,"column":9,"nodeType":"Identifier","endLine":179,"endColumn":13},{"ruleId":"no-restricted-globals","severity":2,"message":"Unexpected use of 'self'.","line":179,"column":9,"nodeType":"Identifier","endLine":179,"endColumn":13},{"ruleId":"no-undef","severity":2,"message":"'window' is not defined.","line":181,"column":9,"nodeType":"Identifier","endLine":181,"endColumn":15}],"errorCount":56,"warningCount":13,"fixableErrorCount":13,"fixableWarningCount":0,"source":null},"hashOfConfig":"yip83r"}}